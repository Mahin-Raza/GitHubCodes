#include<bits/stdc++.h>
using namespace std;

int knap(int val[],int wt[],int n,int W)
{
    int l[n+1][W+1];
    
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=W;j++)
        {
            if(i==0 || j==0)
            l[i][j]=0;
            else if(wt[i-1]<=j)
            l[i][j]=max(val[i-1]+l[i-1][j-wt[i-1]],l[i-1][j]);
            else
            l[i][j]=l[i-1][j];
        }
    }
    return l[n][W];
}

int main()
 {
int t;
cin>>t;
while(t--)
{
    int n,W;
    cin>>n>>W;
    int val[n],wt[n];
    for(int i=0;i<n;i++)
    cin>>val[i];
    for(int i=0;i<n;i++)
    cin>>wt[i];
    
    cout<<knap(val,wt,n,W)<<endl;
    
    
}
	return 0;
}